{"version":3,"sources":["_helpers.js","_page.js","app.js"],"names":["debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","$","fn","any","length","parseSettings","elem","response","attr","parseJSON","ex","console","log","message","extend","ajaxRequest","options","settings","dataType","url","data","method","callback","init","ajax","contentType","type","success","responseData","tryCallback","error","status","ajaxHtml","queryString","toJson","ignoreKeys","window","location","href","toString","toLowerCase","splitData","split","i","l","param","each","val","hasOwnProperty","fromJson","replace","esc","document","keyup","evt","keyCode","getBreakpoint","getComputedStyle","querySelector","getPropertyValue","changeEvent","prop","page","tableOfContentsSource","find","tableOfContentsTarget","tableOfContentsWrapperClass","tableOfContentsListClass","tableOfContentsItemClass","loadTableOfContents","sourceHtml","addClass","html","app","modulePlaceholders","modules","module","codeElem","content"],"mappings":"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","file":"app.js","sourcesContent":["(function($) {\r\n\t\r\n\t/*------------------------------------*\\\r\n\t    ANY\r\n\t    \r\n\t    This will return true if there are any items \r\n\t    in a jQuery collection. \r\n\t    \r\n\t    EXAMPLE\r\n\t    \r\n\t    var items = $(\".item\");\r\n\t    \r\n\t    if(items.any()) {\r\n\t\t\tconsole.log(\"YAY!\");\r\n\t\t}\r\n\t\\*------------------------------------*/\r\n\t\r\n\t$.fn.any = function() {\r\n\t\treturn $(this).length > 0;\r\n\t}\r\n\r\n\r\n    /*------------------------------------*\\\r\n        PARSE SETTINGS\r\n        \r\n        This will try and parse inline json settings as an object literal to pass into a plugin\r\n        \r\n        EXAMPLE\r\n        \r\n        <div class=\"item\" data-settings='{\"setting1\": true}'></div>\r\n\r\n        var item = $(\".item\"),\r\n            settings = item.parseSettings();\r\n        \r\n        console.log(settings.setting1);\r\n        \r\n        returns true;\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.parseSettings = function () {\r\n\r\n        var elem = $(this),\r\n            response = {};\r\n\r\n        if (elem.attr(\"data-settings\")) {\r\n\r\n            try {\r\n                response = $.parseJSON(elem.attr(\"data-settings\"));\r\n            }\r\n            catch (ex) {\r\n                console.log(\"Check input data. Message: \" + ex.message);\r\n                return {};\r\n            }\r\n        }\r\n\r\n        return response;\r\n    };\r\n    \r\n\r\n    /*------------------------------------*\\\r\n        AJAX REQUEST\r\n        \r\n        A nice Ajax wrapper method\r\n        \r\n        EXAMPLE\r\n        \r\n        $.ajaxRequest({\r\n            url: \"/test\",\r\n            callback(function(data, isSuccess) {\r\n                \r\n                if(isSuccess) {\r\n                    alert('All the data is WINNING');\r\n                }\r\n            });\r\n        });\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxRequest: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n                dataType: \"application/json\",\r\n                url: \"/\",\r\n                data: {},\r\n                method: \"GET\",\r\n                callback: null\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tvar init = function() {\r\n\t\t\t\t\r\n\t\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\tcontentType: settings.dataType, \r\n\t\t\t\t\turl: settings.url,\r\n\t\t\t\t\tdata: settings.data,\r\n\t\t\t\t\ttype: settings.method,\r\n\t\t\t\t\tsuccess: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror: function(responseData) {\r\n\t\t\t\t\t\ttryCallback(responseData);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttryCallback = function(responseData) {\r\n\t\t\t\t\r\n\t\t\t\tif(typeof(settings.callback) == \"function\") {\r\n\t\t\t\t\tsettings.callback(responseData, (responseData != null ? (responseData.status == 200 ? false : true) : true));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinit();\r\n\t\t\t\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        AJAX HTML\r\n\r\n        A wrapper to ajaxRequest for simple HTML getting\r\n\r\n        EXAMPLE\r\n\r\n        $.ajaxHtml('http://google.com', function(data) {\r\n\t\t\t// do stuff\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tajaxHtml: function(url, callback) {\r\n\t\t\t$.ajaxRequest({\r\n\t\t\t\tdataType: \"text/html\",\r\n\t\t\t\turl: url,\r\n\t\t\t\tcallback: callback\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\r\n    /*------------------------------------*\\\r\n        QUERY STRING\r\n\r\n        A helper to work with query strings\r\n\r\n        toJson: take the current query string and return it as json\r\n        fromJson: takes a json object and converts into a query string\r\n\r\n    \\*------------------------------------*/\r\n    $.extend({\r\n    \tqueryString: {\r\n\r\n    \t\ttoJson: function(ignoreKeys) {\r\n\t\t\t\tvar response = {},\r\n\t\t\t\t\tdata = window.location.href.toString().toLowerCase(),\r\n\t\t\t\t\tsplitData = [];\r\n\r\n\t\t\t\t// Return empty object if undefined\r\n\t\t\t\tif(typeof(data) == 'undefined') {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return empty object if empty\r\n\t\t\t\tif(data.length == 0) {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set empty array if ignore keys not set\r\n\t\t\t\tif(typeof(ignoreKeys) == 'undefined') {\r\n\t\t\t\t\tignoreKeys = [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Split query string into array\r\n\t\t\t\tsplitData = data.split('?')[1].split('&');\r\n\r\n\t\t\t\t// Loop and create key value pairs\r\n\t\t\t\tfor (var i = 0, l = splitData.length; i < l; i++) {\r\n\t\t\t\t    var param = splitData[i].split('=');\r\n\t\t\t\t    response[param[0]] = param[1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check ignore keys length\r\n\t\t\t\tif(ignoreKeys.length > 0) {\r\n\r\n\t\t\t\t\t// Loop each one and delete if exists\r\n\t\t\t\t\t$.each(ignoreKeys, function(i, val) {\r\n\r\n\t\t\t\t\t\tif(response.hasOwnProperty(val)) {\r\n\t\t\t\t\t\t\tdelete response[val];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn response;\r\n    \t\t},\r\n\r\n    \t\tfromJson: function(data) {\r\n    \t\t\treturn '?' + $.param(data).replace('?', '&');\r\n    \t\t}\r\n    \t}\r\n    });\r\n\t\r\n\t\r\n    /*------------------------------------*\\\r\n        ESC\r\n        \r\n        A useful little wrapper for the escape key press event\r\n        \r\n        EXAMPLE\r\n        \r\n\t\t$.esc({\r\n\t\t\tcallback: function(evt) {\r\n\t\t\t\t\r\n\t\t\t\t// Close your modal or whatever. Accessibility FTW\r\n\t\t\t}\r\n\t\t});\r\n\r\n    \\*------------------------------------*/\r\n\t$.extend({\r\n\t\tesc: function(options) {\r\n\t\t\t\r\n\t\t\tvar settings = {\r\n\t\t\t\tcallback: null\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsettings = $.extend(true, {}, settings, options);\r\n\t\t\t\r\n\t\t\tif(typeof(settings.callback) == 'function') {\r\n\t\t\t\t\r\n\t\t\t\t$(document).keyup(function(evt) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// escape key maps to keycode `27`\r\n\t\t\t\t\tif (evt.keyCode == 27) { \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// run callback and pass the event over\r\n\t\t\t\t\t\tsettings.callback(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t});\r\n\r\n\t/*------------------------------------*\\\r\n        GET BREAKPOINT\r\n\r\n\t\tReturns the current CSS breakpoint as defined in global.scss\r\n\t\\*------------------------------------*/\r\n\t$.extend({\r\n\t\tgetBreakpoint: function() {\r\n\t\t\treturn window.getComputedStyle(document.querySelector('body'), ':before').getPropertyValue('content').replace(/\\\"/g, '');\r\n\t\t}\r\n\t});\r\n\r\n    /*------------------------------------*\\\r\n        CHANGE EVENT\r\n\r\n        A helper to return the correct 'change' event for an element\r\n\r\n        EXAMPLE\r\n\r\n        var event = $('.item').changeEvent();\r\n\r\n    \\*------------------------------------*/\r\n    $.fn.changeEvent = function() {\r\n\r\n    \tvar elem = $(this),\r\n    \t\tresponse = 'change';\r\n\r\n\t\t\t// Work out what the change event will be, based on input type\r\n\t\t\tswitch(elem.prop('tagName').toString().toLowerCase()) {\r\n\t\t\t\tcase 'input':\r\n\r\n\t\t\t\t\tif(elem.attr('type') != 'checkbox' && elem.attr('type') != 'radio') {\r\n\t\t\t\t\t\tresponse = 'input';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\treturn response;\r\n    };\r\n}($));\r\n\r\n// TAKEN FROM David Walsh blog - http://davidwalsh.name/javascript-debounce-function\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n\tvar timeout;\r\n\treturn function() {\r\n\t\tvar context = this, args = arguments;\r\n\t\tvar later = function() {\r\n\t\t\ttimeout = null;\r\n\t\t\tif (!immediate) func.apply(context, args);\r\n\t\t};\r\n\t\tvar callNow = immediate && !timeout;\r\n\t\tclearTimeout(timeout);\r\n\t\ttimeout = setTimeout(later, wait);\r\n\t\tif (callNow) func.apply(context, args);\r\n\t};\r\n};","(function($) {\n\n\t$.fn.page = function() {\n\t\tvar elem = $(this),\n\t\t\ttableOfContentsSource = elem.find('.js-page__table-of-contents-source'),\n\t\t\ttableOfContentsTarget = elem.find('.js-page__table-of-contents-target'),\n\t\t\tsettings = {\n\t\t\t\ttableOfContentsWrapperClass: 'list-view-menu',\n\t\t\t\ttableOfContentsListClass: 'list-view-menu__list',\n\t\t\t\ttableOfContentsItemClass: 'list-view-menu__item'\n\t\t\t};\n\n\t\tvar init = function() {\n\n\t\t\tloadTableOfContents();\n\t\t},\n\n\t\t// Attempt to load the hidden table of contents and clone it to a visible menu\n\t\tloadTableOfContents = function() {\n\n\t\t\tvar sourceHtml = '';\n\n\t\t\t// If there's a source, prep and load\n\t\t\tif(tableOfContentsSource.any()) {\n\n\t\t\t\t// Add list class to lists \n\t\t\t\ttableOfContentsSource.find('ol,ul').addClass(settings.tableOfContentsListClass);\n\n\t\t\t\t// Add item class to items\n\t\t\t\ttableOfContentsSource.find('li').addClass(settings.tableOfContentsItemClass);\n\n\t\t\t\t// Load the html\n\t\t\t\tsourceHtml = tableOfContentsSource.html();\n\t\t\t}\n\n\n\t\t\tif(sourceHtml.length) {\n\n\t\t\t\t// Add the source html to the target\n\t\t\t\ttableOfContentsTarget.html('<ul class=\"' + settings.tableOfContentsWrapperClass + '\">' + sourceHtml + '</ul>');\n\t\t\t}\n\t\t};\n\n\t\tinit();\n\t\treturn this;\n\t};\n\n}($));","/*------------------------------------*\\\n    CENTRAL APP MASTER \n    \n    This file includes the module placeholders system that allows modular \n    binding of custom methods / plugins etc. \n    \n    EXAMPLE\n    \n    <div data-module=\"example1,example2\"></div> \n    \n    The above would meet two conditions in the below switch statement.\n    \n\\*------------------------------------*/\nvar app = (function($) {\n\t\n\t// This method will run when the DOM is ready. \n\tvar init = function() {\n\t\t\n\t\t// Find any module placeholders \n\t\tvar modulePlaceholders = $('[data-module]');\n\t\t\n\t\tif(modulePlaceholders.any()) {\n\t\t\t\n\t\t\t// Loop each placeholder\n\t\t\tmodulePlaceholders.each(function() {\n\t\t\t\t\n\t\t\t\tvar elem = $(this),\n\t\t\t\t\tmodules = elem.attr('data-module');\n\t\t\t\t\n\t\t\t\t// If any modules found\t\n\t\t\t\tif(modules) {\n\t\t\t\t\t\n\t\t\t\t\t// Split on the comma \n\t\t\t\t\tmodules = modules.split(',');\n\t\t\t\t\t\n\t\t\t\t\t// Loop each module key\n\t\t\t\t\t$.each(modules, function(i, module) {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Run switch to bind each module to each key\n\t\t\t\t\t\tswitch(module) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcase 'page':\n\t\t\t\t\t\t\t\telem.page();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Nasty little fix to format some of the markdown nasties\n\t\t$('pre > code').each(function() {\n\n\t\t\tvar codeElem = $(this),\n\t\t\t\tcontent = codeElem.html();\n\n\t\t\t// Replace entities with real characters\n\t\t\tcontent = content.replace(/&amp;lbrace;/g, '{').replace(/&amp;rbrace;/g, '}');\n\n\t\t\tcodeElem.html(content);\n\t\t});\n\n\t};\n\t\n\treturn {\n\t\tinit: init\n\t}\n\t\n}(window.$));\n\n// RUN!!\napp.init();"],"sourceRoot":"/source/"}